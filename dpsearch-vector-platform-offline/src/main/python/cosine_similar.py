#encoding=utf-8
'''
created on 2017-6-29
@author: zhen.huaz
'''

import math
from string import strip
import time

import numpy as np
from sklearn.metrics.pairwise import cosine_similarity


def cal_cosin(vecA,vecB):
    l = len(vecA)
    if(len(vecA) != len(vecB)):
        return 0;
    else:
        dot_product = 0
        normA = 0
        normB = 0
        for i in range(l):
            x=float(vecA[i])
            y=float(vecB[i])
            dot_product += x * y;
            normA += x*x
            normB += y*y
        if (abs(normA)<1e-12 or abs(normB)<1e-12 ):
            return 0;
        else:
            return dot_product/math.sqrt(normA*normB)


if __name__ == "__main__":
    # line1 = '-2.844606 -1.625980 4.008225 0.604990 -4.504306 -2.500125 -4.455434 0.073545 4.631977 1.899235 -2.599644 2.688798 -3.156156 1.804369 -0.919633 0.999558 -0.284043 1.789142 0.721263 -1.616909 2.210928 -0.601400 -1.410170 -0.412266 0.510091 5.497511 -7.903160 -3.962436 2.946818 1.346420 -0.290118 -0.903964 3.263185 -0.275323 0.116186 1.454000 -1.067317 3.381125 0.214787 0.232668 3.348150 1.942083 -3.439641 -2.331421 -4.294993 0.841295 -1.610458 -1.703741 -1.415823 4.495498 -1.197116 -0.991659 1.082830 4.148432 -2.847564 -5.120673 -1.330804 -2.047854 -1.806180 -0.067990 3.744443 0.105760 -4.018199 -0.116119 0.398177 -3.165406 -3.056265 1.422185 0.538582 1.830734 2.037122 -2.401207 1.695439 -1.679499 -0.567068 -1.493736 2.883665 3.555135 -1.904608 4.096406 0.565811 1.298693 0.135036 -2.491000 -1.507896 4.233792 1.456942 2.300436 -0.160889 -0.266351 0.593034 0.203690 -2.785429 0.768991 0.251951 -2.210450 -2.067816 2.179834 1.324016 1.806363'
    # line2 = '-3.228632 2.343348 1.012459 -0.707030 0.218974 -4.491388 -2.966730 -4.532404 -1.521687 2.065310 -3.220856 4.668845 3.625793 -1.498410 3.000117 -0.277863 0.916032 -3.400424 3.467844 -0.866584 1.384635 -1.185793 -0.211380 0.858329 2.961483 4.469329 -5.427716 -1.603194 2.451807 -0.398816 4.907094 -3.198642 0.261152 3.369599 1.221437 2.766733 0.314913 -3.985163 -0.801384 -0.042018 3.607639 2.890829 -2.967085 -0.716214 -0.916889 1.642630 -1.214531 -0.513360 -2.876843 -0.549886 4.588870 -2.290186 1.486572 0.965391 -1.897500 0.395038 1.143746 -0.058363 -1.099187 -0.746239 3.257534 -1.296806 -2.465097 -2.471252 2.552038 0.392580 -2.964339 -2.383631 0.344854 -0.174209 -1.361635 -3.757684 -2.505678 -0.023114 -2.350036 0.591868 3.904174 -1.422695 0.518125 1.378350 2.173414 -1.140751 1.311107 -0.955329 0.516777 1.218581 1.841068 3.663248 0.075827 1.730731 0.200522 0.939064 -0.246483 1.738138 2.520153 1.509834 -2.120289 1.731789 -2.231597 1.932957'
    # line3 = '-1.030604 -6.519943 -0.267329 0.898720 0.496787 -0.700070 -2.998280 -3.255558 2.388147 1.128150 -0.680219 2.387014 -1.576936 2.299830 0.061078 0.587484 3.191395 1.805079 1.032556 -2.842104 2.763461 -1.943362 -3.518236 -0.139315 0.389722 5.897163 -8.649468 -3.294767 2.198067 -1.330479 3.921473 -0.633662 5.361413 1.619003 -1.480526 1.529247 -1.600528 -2.608293 -3.672220 0.532188 2.271080 1.665166 -5.389955 -5.359420 -3.034551 0.709587 -2.705024 -2.312898 -4.257819 3.278359 0.064027 -3.500832 2.391602 3.408330 -2.822854 -7.843189 1.807507 -3.702346 -2.257673 -1.199032 4.653461 1.755713 -2.472759 -2.592760 1.099002 -2.062335 -1.064984 0.611614 2.654168 -2.037515 2.380816 -8.518684 -1.762052 -0.973740 0.716929 -2.333110 4.232889 7.521688 1.390876 1.441347 1.925077 -0.829984 -1.475228 -5.531855 0.528764 2.237444 0.654688 2.032565 0.457604 1.262983 -1.644158 1.242685 -3.188992 1.279843 1.077663 -3.318642 -1.590312 2.368372 3.545126 -0.214793'
    # start=time.time()
    # a=cosine_similarity(np.array(strip(line1).split(' ')).astype(float).reshape(1,-1), np.array(strip(line2).split(' ')).astype(float).reshape(1,-1))
    # print time.time()-start
    # b=cosine_similarity(np.array(strip(line2).split(' ')).astype(float).reshape(1,-1), np.array(strip(line1).split(' ')).astype(float).reshape(1,-1))
    # c=cosine_similarity(np.array(strip(line1).split(' ')).astype(float).reshape(1,-1), np.array(strip(line3).split(' ')).astype(float).reshape(1,-1))
    # d=cosine_similarity(np.array(strip(line2).split(' ')).astype(float).reshape(1,-1), np.array(strip(line3).split(' ')).astype(float).reshape(1,-1))
    # print a
    # print b
    # print c
    # print d
    # print time.time()-start
    line0 = "-0.67268623 -1.07875178 -0.87598067 0.25155626 -0.47122379 1.00598988 1.23808644 0.20261186 0.63522061 -0.0922695"
    lines = []
    lines.append("0.67929238 -1.22676181 0.17900207 0.18612647 0.6535294 1.54254475 -0.14536416 -1.4013747 0.76783221 1.19272679")
    lines.append("0.96541686 -0.4812715  -0.73444291 -0.00493661  0.34949995 -0.06556529 -0.39753251  0.52535163  0.51682007 -0.41730971")


    for line in lines:
        a=cosine_similarity(np.array(strip(line0).split(' ')).astype(float).reshape(1,-1), np.array(strip(line).split(' ')).astype(float).reshape(1,-1))
        print a
